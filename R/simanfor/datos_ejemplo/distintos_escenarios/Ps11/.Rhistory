# Directorio de trabajo
setwd("Escritorio")
# Librerías
library(ggplot2)
library(scales)
# Variables necesarias
Dg <- c(10:35)  # establecemos los rangos de diámetro medio cuadrático (cm)
Nmax <- exp(11.9358)*Dg^(-1.605)  # calculamos la densidad máxima
# Añadimos esta información y las líneas adicinales a un dataframe
df <- data.frame(Dg = c(10:35), Nmax = exp(11.9358)*Dg^(-1.605), N60<-0.60*Nmax, N35<-0.35*Nmax, N25<-0.25*Nmax)
# seleccionamos dataframe
ggplot(df) +
# ponemos las etiquetas que queramos al gráfico
labs(title = "Comparación de SDI máximo actual (real) y con cambio climático (hipotético)",  # título
#subtitle = "Subtítulo",  # subtítulo
caption = "SDI = N(25/Dg)⁻¹ ⁶⁰⁵",  # pie de gráfico
x = "Dg (cm)",  # eje x
y = "Densidad (pies/ha)"  # eje y
#tag = waiver()  # etiqueta en la parte superior izquierda del gráfico
) +
# centrado de título
theme(plot.title = element_text(hjust = 0.5, face = "bold")) +  # centrar título y ponerlo en negrita``
# transformo los ejes a logaritmo y creo un eje secundario
scale_x_continuous(trans = 'log') +  # transformación logarítmica del eje x
scale_y_continuous(trans = 'log',   # transformación logarítmica del eje y
labels = comma_format(digits = 0),  # sin decimales
sec.axis = sec_axis(~.*2,  # crear eje y'
name = 'SDI',  # nombrar eje y'
labels = comma_format(digits = 0))) +  # eliminar decimales
# añado las líneas de datos
geom_line(aes(x = Dg, y = Nmax), col='black') +
geom_line(aes(x = Dg, y = N60), col='blue') +
geom_line(aes(x = Dg, y = N35), col='darkgreen') +
geom_line(aes(x = Dg, y = N25), col='red') +
# añado puntos de datos
#geom_point(aes(x = Dg, y = Nmax), col='black') +
#geom_point(aes(x = Dg, y = N60), col='blue') +
#geom_point(aes(x = Dg, y = N35), col='darkgreen') +
#geom_point(aes(x = Dg, y = N25), col='red') +
# incluyo las líneas guía del eje x
geom_vline(xintercept = 15, col="grey", lty = 4) +
geom_vline(xintercept = 20, col="grey", lty = 4) +
geom_vline(xintercept = 25, col="grey", lty = 4) +
geom_vline(xintercept = 30, col="grey", lty = 4) +
geom_vline(xintercept = 35, col="grey", lty = 4) +
# incluyo las líneas guía del eje y
geom_hline(yintercept = 200, col="grey", lty = 4) +
geom_hline(yintercept = 500, col="grey", lty = 4) +
geom_hline(yintercept = 1000, col="grey", lty = 4) +
geom_hline(yintercept = 1500, col="grey", lty = 4) +
# incluyo el texto en las posiciones del gráfico que quiero
annotate("text", x = 20, y = 1400, col = "black", label = "SDImax") +
annotate("text", x = 22.5, y = 750, col = "blue", label = "60% SDImax") +
annotate("text", x = 25, y = 375, col = "darkgreen", label = "35% SDImax") +
annotate("text", x = 27.5, y = 150, col = "red", label = "25% SDImax")
# una vez instaladas, vamos a cargarlas en R para poder utilizarlas
library(readxl)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
# el directorio de trabajo es la carpeta de tu ordenador donde tienes los RESULTADOS obtenidos de SIMANFOR y sobre el que trabajaremos
# Copia dicha ruta a continuación entre las "", y asegúrate de que en dicha carpeta SOLO tienes archivos con los RESULTADOS de la
# simulación (NO les cambies el nombre a los archivos, sino el script te dará errores)
general_dir <- "F:/aitor/PhD_UVa/8_courses-training/0_scripts_sueltos/datos_ejemplo/calidad_estacion"
setwd(general_dir)  # ahora establecemos la ruta anterior como directorio de trabajo
plots <- data.frame()  # variable que contendrá la información de parcelas
directory <- list.dirs(path = ".")  # variable que contendrá los nombres de las subcarpetas
for (folder in directory){  # para cada carpeta dentro del directorio...
# generamos una subcarpeta y la establecemos como directorio actual
specific_dir <- paste(general_dir, "substract", folder, sep = "")
specific_dir <- gsub("substract.", "", specific_dir)
setwd(specific_dir)
# extraemos el nombre de los archivos .xlsx (OJO, asegúrate de que solo tienes ahí los resultados de SIMANFOR)
files_list <- list.files(specific_dir, pattern="xlsx")
# ahora accedemos a cada uno de los archivos...
for (doc in files_list) {
plot_data <- read_excel(doc, sheet = "Parcelas")  # leemos la información de la hoja "Parcelas"
plot_data$Nombre_fichero_origen <- doc  # creamos una columna en donde añadimos el nombre del archivo
# añadimos la información a la variable "plots"
ifelse(length(plots) == 0, plots <- rbind(plot_data), plots <- rbind(plots, plot_data))
}
}
# ahora que ya tenemos los datos de SIMANFOR en R, vamos a trabajar un poco con ellos
df <- plots  # vamos a copiar los datos para conservar los orginales
# las edades de las parcelas son muy diferentes, por lo que, para simplificar, vamos a agruparlas en grupos de edad de 5 años
redondeo <- function(x, base){  # esta función nos permitirá redondear la edad de la masa a múltiplos de 5 años
base * round(x/base)
}
df$T <- redondeo(df$T, 5)  # utilizamos la función anterior
df <- df[!df$Accion == "Carga Inicial", ]  # la primera línea de datos no es necesaria, así que vamos a eliminarla
# para identificar cada uno de los escenarios, vamos a extraer el nº de escenario y crear una columna con su valor
df$n_scnr <- substr(df$Nombre_fichero_origen, 38, 39)
mean_evo_by_scnr <- ddply(df, c('n_scnr', 'T'), summarise,  # agrupamos la información por nº de escenario y edad de parcela
# ahora calcularemos algunas variables generales...
N = mean(N, na.rm = TRUE),  # calculamos la densidad media
dg = mean(dg, na.rm = TRUE),  # diámetro medio cuadrático
Ho = mean(Ho, na.rm = TRUE),  # altura dominante
V = mean(V_con_corteza, na.rm = TRUE),  # volumen
WT = mean(WT, na.rm = TRUE),  # biomasa total
G = mean(G, na.rm = TRUE),  # área basimétrica
# y la clasificación de productos
#V_desenrollo = mean(V_desenrollo, na.rm = TRUE),  # volumen desenrollo
#V_chapa = mean(V_chapa, na.rm = TRUE),  # volumen chapa
V_sierra_gruesa = mean(V_sierra_gruesa, na.rm = TRUE),  # volumen sierra gruesa
V_sierra = mean(V_sierra, na.rm = TRUE),  # volumen sierra
V_sierra_canter = mean(V_sierra_canter, na.rm = TRUE),  # volumen sierra cánter
#V_postes = mean(V_postes, na.rm = TRUE),  # volumen postes
#V_estacas = mean(V_estacas, na.rm = TRUE),  # volumen estacas
V_trituracion = mean(V_trituracion, na.rm = TRUE)  # volumen trituracion
)
ggplot(mean_evo_by_scnr,  # seleccionamos los datos a utilizar
# selección de variables
aes(x = T, y = N,  # eje X e Y
group = n_scnr, colour = n_scnr)) +  # agrupamos por tipo de escenario, asignando un color distinto a cada uno
# ponemos las etiquetas
labs(title = "Evolución de la densidad de la masa",  # título
# subtitle = "",  # subtítulo
x = "Edad de la masa (años)",  # eje x
y = "Densidad (pies/ha)"  # eje y
) +
# modificamos las etiquetas
theme(plot.title=element_text(size = 20,  # cambiamos el tamaño del título
hjust=0.5),  # centramos título
plot.subtitle=element_text(size = 15,  # tamaño subtítulo
hjust=0.5),  # centramos subtítulo
axis.title = element_text(size = 15),  # tamaño ejes
legend.title = element_text(size = 15),  # tamaño título leyenda
legend.text = element_text(size = 12)) +  # tamaño contenido leyenda
# modificamos la leyenda
scale_color_discrete('Escenario') +  # damos nombre a la leyenda
# y dibujamos lo datos
geom_point() +  # nube de puntos
#geom_smooth(method='lm', )  # regresión lineal
geom_line()  # línea uniendo puntos
# el directorio de trabajo es la carpeta de tu ordenador donde tienes los RESULTADOS obtenidos de SIMANFOR y sobre el que trabajaremos
# Copia dicha ruta a continuación entre las "", y asegúrate de que en dicha carpeta SOLO tienes archivos con los RESULTADOS de la
# simulación (NO les cambies el nombre a los archivos, sino el script te dará errores)
general_dir <- "F:/aitor/PhD_UVa/8_courses-training/0_scripts_sueltos/datos_ejemplo/distintos_escenarios"
setwd(general_dir)  # ahora establecemos la ruta anterior como directorio de trabajo
plots <- data.frame()  # variable que contendrá la información de parcelas
directory <- list.dirs(path = ".")  # variable que contendrá los nombres de las subcarpetas
for (folder in directory){  # para cada carpeta dentro del directorio...
# generamos una subcarpeta y la establecemos como directorio actual
specific_dir <- paste(general_dir, "substract", folder, sep = "")
specific_dir <- gsub("substract.", "", specific_dir)
setwd(specific_dir)
# extraemos el nombre de los archivos .xlsx (OJO, asegúrate de que solo tienes ahí los resultados de SIMANFOR)
files_list <- list.files(specific_dir, pattern="xlsx")
# ahora accedemos a cada uno de los archivos...
for (doc in files_list) {
plot_data <- read_excel(doc, sheet = "Parcelas")  # leemos la información de la hoja "Parcelas"
plot_data$Nombre_fichero_origen <- doc  # creamos una columna en donde añadimos el nombre del archivo
# añadimos la información a la variable "plots"
ifelse(length(plots) == 0, plots <- rbind(plot_data), plots <- rbind(plots, plot_data))
}
}
# ahora que ya tenemos los datos de SIMANFOR en R, vamos a trabajar un poco con ellos
df <- plots  # vamos a copiar los datos para conservar los orginales
# las edades de las parcelas son muy diferentes, por lo que, para simplificar, vamos a agruparlas en grupos de edad de 5 años
redondeo <- function(x, base){  # esta función nos permitirá redondear la edad de la masa a múltiplos de 5 años
base * round(x/base)
}
df$T <- redondeo(df$T, 5)  # utilizamos la función anterior
df <- df[!df$Accion == "Carga Inicial", ]  # la primera línea de datos no es necesaria, así que vamos a eliminarla
## OJO, ejecuta solo en comando correcto en los siguientes:
df$n_scnr <- substr(df$Nombre_fichero_origen, 38, 39)  # ejemplo de calidad de estación
df$n_scnr <- substr(df$Nombre_fichero_origen, 0, 4)  # ejemplo de calidad de estación
View(df)
df$n_scnr <- substr(df$Nombre_fichero_origen, 0, 5)  # ejemplo de calidad de estación
View(df)
mean_evo_by_scnr <- ddply(df, c('n_scnr', 'T'), summarise,  # agrupamos la información por nº de escenario y edad de parcela
# ahora calcularemos algunas variables generales...
N = mean(N, na.rm = TRUE),  # calculamos la densidad media
dg = mean(dg, na.rm = TRUE),  # diámetro medio cuadrático
Ho = mean(Ho, na.rm = TRUE),  # altura dominante
V = mean(V_con_corteza, na.rm = TRUE),  # volumen
WT = mean(WT, na.rm = TRUE),  # biomasa total
G = mean(G, na.rm = TRUE),  # área basimétrica
# y la clasificación de productos
#V_desenrollo = mean(V_desenrollo, na.rm = TRUE),  # volumen desenrollo
#V_chapa = mean(V_chapa, na.rm = TRUE),  # volumen chapa
V_sierra_gruesa = mean(V_sierra_gruesa, na.rm = TRUE),  # volumen sierra gruesa
V_sierra = mean(V_sierra, na.rm = TRUE),  # volumen sierra
V_sierra_canter = mean(V_sierra_canter, na.rm = TRUE),  # volumen sierra cánter
#V_postes = mean(V_postes, na.rm = TRUE),  # volumen postes
#V_estacas = mean(V_estacas, na.rm = TRUE),  # volumen estacas
V_trituracion = mean(V_trituracion, na.rm = TRUE)  # volumen trituracion
)
ggplot(mean_evo_by_scnr,  # seleccionamos los datos a utilizar
# selección de variables
aes(x = T, y = N,  # eje X e Y
group = n_scnr, colour = n_scnr)) +  # agrupamos por tipo de escenario, asignando un color distinto a cada uno
# ponemos las etiquetas
labs(title = "Evolución de la densidad de la masa",  # título
# subtitle = "",  # subtítulo
x = "Edad de la masa (años)",  # eje x
y = "Densidad (pies/ha)"  # eje y
) +
# modificamos las etiquetas
theme(plot.title=element_text(size = 20,  # cambiamos el tamaño del título
hjust=0.5),  # centramos título
plot.subtitle=element_text(size = 15,  # tamaño subtítulo
hjust=0.5),  # centramos subtítulo
axis.title = element_text(size = 15),  # tamaño ejes
legend.title = element_text(size = 15),  # tamaño título leyenda
legend.text = element_text(size = 12)) +  # tamaño contenido leyenda
# modificamos la leyenda
scale_color_discrete('Escenario') +  # damos nombre a la leyenda
# y dibujamos lo datos
geom_point() +  # nube de puntos
#geom_smooth(method='lm', )  # regresión lineal
geom_line()  # línea uniendo puntos
